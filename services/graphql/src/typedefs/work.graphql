type Work {
  authors: [Author!]!
  hapaxLegomena: Int!
  id: ID!
  learnableWords: Int!
  maxProgress: Int!
  modified: Float!
  numberInSeries: Int
  progress: Int!
  series: Series
  status: ReadStatus!
  title: String!
  totalWords: Int!
  type: WorkType!
  uniqueWords: Int!
}

enum SortOrder {
  modified
  title
}

input WorkInput {
  """
  Get only those works that are not part of a series.
  """
  excludeVolumesInSeries: Boolean
  status: ReadStatus
  workId: String!
}

input WorkListInput {
  """
  Get only those works that are not part of a series.
  """
  excludeVolumesInSeries: Boolean
  sortOrder: SortOrder
  status: ReadStatus
  workIds: [String!]
}

input DeleteWorkInput {
  workId: String!
}

type DeleteResponse {
  code: Int!
  success: Boolean!
  message: String!
}

input UpdateWorkProgressInput {
  progress: Int!
  workId: String!
}

type UpdateWorkProgressResponse {
  code: Int!
  success: Boolean!
  message: String!
  progress: Int
}

input UpdateWorkReadStatusInput {
  status: ReadStatus!
  workId: String!
}

extend type Query {
  work(input: WorkInput!): Work
  workList(input: WorkListInput): [Work!]!
}

extend type Mutation {
  deleteWork(input: DeleteWorkInput!): DeleteResponse!
  updateWorkProgress(
    input: UpdateWorkProgressInput!
  ): UpdateWorkProgressResponse!
  updateWorkReadStatus(
    input: UpdateWorkReadStatusInput!
  ): UpdateReadStatusResponse!
}
