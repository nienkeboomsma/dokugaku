type Series {
  authors: [Author!]!
  id: ID!
  status: ReadStatus
  title: String!
  wordCount(input: WordCountInput): Int
  words(input: SubQueryWordListInput): [Word!]!
  volumes(userId: String): [Work!]!
}

input SeriesInput {
  seriesId: String!
  status: ReadStatus
  """
  If no userId value is supplied 'status' will default to null.
  """
  userId: String
}

input SeriesListInput {
  seriesIds: [String!]
  status: ReadStatus
  """
  If no userId value is supplied 'status' will default to null.
  """
  userId: String
}

extend type Query {
  series(input: SeriesInput!): Series
  seriesList(input: SeriesListInput): [Series!]!
}

extend type Mutation {
  updateSeriesReadStatus: SetReadStatusResponse!
}
