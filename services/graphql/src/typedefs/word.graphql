type FrequencyListWord {
  id: ID!
  info: JSON!
  frequency: Int!
  ignored: Boolean!
}

type GlossaryWord {
  id: ID!
  info: JSON!
  frequency: Int!
  ignored: Boolean!
  volumeNumber: Int
  pageNumber: Int!
  sentenceNumber: Int!
  entryNumber: Int!
  componentNumber: Int
}

type KnownOrExcludedWord {
  id: ID!
  info: JSON!
}

type RecommendedWord {
  id: ID!
  info: JSON!
  frequency: Int!
}

input CorpusScopedInput {
  limit: Int
  offset: Int
  searchString: String
}

input FrequencyListInput {
  isPartOfSeries: Boolean
  """
  If true, seriesId must be supplied; if false, isPartOfSeries and workId must be supplied.
  """
  isSeries: Boolean!
  limit: Int
  offset: Int
  seriesId: String
  searchString: String
  workId: String
}

input GlossaryInput {
  """
  If true, seriesId must be supplied.
  """
  isPartOfSeries: Boolean!
  limit: Int
  offset: Int
  searchString: String
  seriesId: String
  workId: String!
}

extend type Query {
  excludedWords(input: CorpusScopedInput): [KnownOrExcludedWord!]!
  frequencyList(input: FrequencyListInput!): [FrequencyListWord!]!
  glossary(input: GlossaryInput!): [GlossaryWord!]!
  knownWords(input: CorpusScopedInput): [KnownOrExcludedWord!]!
  recommendedWords(input: CorpusScopedInput): [RecommendedWord!]!
}

# extend type Mutation {
# updateIgnoredWord(input: UpdateIgnoredWordInput!): UpdateIgnoredWordResponse!
# }

# type UpdateIgnoredWordResponse {
#   code: Int!
#   success: Boolean!
#   message: String!
#   ignored: Boolean
# }
